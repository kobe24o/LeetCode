class Solution {
public:
    int minBuildTime(vector<int>& blocks, int split) {
    	int n = blocks.size(), i, j, mintime = INT_MAX;
    	sort(blocks.rbegin(),blocks.rend());
    	vector<vector<int>> dp(n, vector<int>(n+1,INT_MAX));
    	return dfs(blocks,dp,split,0,1);
    }
    int dfs(vector<int>& blocks, vector<vector<int>> &dp, int split, int i, int workers)
    {
    	if(workers >= blocks.size()-i)//工人数量超了
    		return blocks[i];
    	if(dp[i][workers] != INT_MAX)
    		return dp[i][workers];
    	int ans = INT_MAX, time;
    	for(int work = 0; work < workers; ++work)//至少留一个人去变成2倍
    	{
    		int splitnew = (workers-work)*2;//不干活的分裂出来的数量
    		time = max(dfs(blocks,dp,split,i+work,splitnew)+split, blocks[i]);
    		if(time < ans)
    			ans = time;
    		else
    			break;
    	}
    	return dp[i][workers] = ans;
    }
};
//以上，最后一个例子出错
[19221,60403,31845,16039,13368,87622,3715,97475,78069,13621,18180,7794,9664,10286,66438,8795,50946,18651,10725,54791,50546,4826,12580,38805,78911,17856,88441,92633,50946,73362,47287,21346,63227,25288,99884,31774,34348,59204,28905,73718,4267,60163,3136,51150,40210,78381,68301,52930,36420,1790,58844,51035,71136,78684,11061,4187,5194,54782,77501,21780,32437,17562,62075,60865,79074,46065,81127,95863,48687,47823,82902,90772,49714,56595,10787,36167,98290,65367,28456,90357,9484,67382,90931,16405,48135,45078,22838,57688,50267,56599,71754,63448,2884,19879,53685,32856,59165,21273,86800,88956,60170,1448,56350,75276,83108,98395,49280,37971,68892,87492,32784,46173,28684,40757,38061,19145,76199,62478,53405,18419,21587,65807,56366,50407,5757,20112,82908,35947,42729,70259,90849,51067,40271,59205,35113,24560,83109,52762,93973,64085,62837,46665,97918,65356,29112,24756,85974,16224,50254,95675,21353,98664,31797,46726,98496,7714,71237,51939,99551,29011,32268,54939,43034,68426,98481,61744,88865,97595,28358,62552,69343,95220,25500,12209,68934,83069,36374,95156,78716,26699,28465,39532,67207,71463,91429,33650,99678,92723,83836,66884,21036,83648,30262,86035,11655,43959,22060,54171,39236,61456,78944,3329,45988,1729,22839,52155,79935,95983,90709,53914,89481,28684,74784,38640,37979,69589,86817,93669,71260,80566,56486,96595,27425,27890,53738,42826,23,6764,88123,67535,69884,63761,21202,43639,3127,60226,58157,26869,70558,43875,5232,15829,21184,86276,72742,8317,35636,51670,90570,58422,96183,44305,34228,53522,16400,19157,81878,56958,7534,26840,88922,96648,64339,75118,90843,53400,51430,71891,87703,46134,8794,26229,88960,755,49123,76837,19148,38836,36263,64887,34999,24842,96130,26314,48812,89693,55488,89242,28713,28701,70479,69699,31096,11719,76407,34374,32973,25863,54957,91731,64598,70406,46445,99002,13829,81207,17043,84904,88346,40718,63367,89817,81485,66877,98289,93449,12376,14076,38848,33249,4845,56074,40635,54640,67802,4703,52791,96752,58122,60794,1251,93012,55399,84657,93036,5449,70542,4105,74584,43883,61539,56898,35562,40228,34776,75027,1369,58136,72425,73516,7675,83656,19741,2943,81970,46938,30739,40750,43563,86527,3629,61388,53944,79388,94401,30046,13307,52329,57857,88549,31244,98537,62460,20993,75961,51816,16078,33789,33481,91825,78932,18551,39651,93475,29911,77630,13019,23833,87561,49690,96107,935,94086,90342,64236,25894,70485,48333,7045,41429,89531,35411,16018,53089,57359,80880,72791,57412,64190,46885,36982,370,65323,32366,30317,67475,22572,55511,76382,40633,41100,84839,94259,52020,80976,88803,12951,63891,96920,18544,89814,3338,64730,26134,12207,84119,53582,70019,77524,40905,14209,33199,85772,27391,43718,21467,60270,10818,70202,59404,59080,4550,46725,35478,35008,47599,59147,79111,78305,46686,53431,66846,2495,94778,34022,59432,10803,91569,45930,24790,34584,70722,77318,29639,96776,92836,63083,88908,25385,39823,60656,93854,61081,48840,39637,54808,98008,99908,22973,85126,40329,62199,87052,52719,79424,72615,30636,9013,43976,5494,34291,33956,13440,29246,23189,7945,24931,34865,64338,7566,17226,51944,48015,21578,6010,26939,8038,4388,84545,79486,42075,41279,14048,35148,48246,30793,14699,46769,65344,45588,61083,55441,62401,28931,30508,67134,37270,48145,18858,23578,24572,36564,37498,6774,20565,59048,85374,7583,11613,82843,30292,66838,76581,49676,96850,80263,2417,70359,33401,25164,32092,80606,65154,36107,53321,64614,95612,6390,74516,6207,21819,71517,24745,37685,43104,49090,18446,7057,1443,99437,44539,42957,27842,85829,30206,49697,52079,99568,63770,34043,7671,35342,55185,27440,62084,26993,30837,12242,45277,50314,97013,5934,18214,88303,3682,12297,11019,7058,54025,4430,20101,35673,12897,46447,60533,75869,60864,13457,49253,9373,48756,90498,25469,36664,33054,50973,70953,52334,42003,21953,46430,52241,45934,2823,72639,41036,3194,84733,34282,97236,48224,99045,44634,14501,29792,3727,97146,50741,18436,17935,22508,82395,16454,87992,71250,41475,18444,70396,85516,14469,11427,70609,96965,85804,84649,88236,20763,63128,89591,83571,13511,6535,65380,91751,30963,96395,40793,4203,91883,7649,86367,63564,56190,78872,10795,31859,38323,69462,36178,54814,6320,44159,61225,32651,64270,89520,86554,86366,46020,88137,56313,53597,68533,8196,59861,26933,39813,54284,62560,64034,31333,35912,34568,88703,85345,16097,96216,96271,28764,6621,75427,1343,55719,95898,20444,9458,46380,91666,9773,2200,96955,61567,70777,75684,5494,50435,1684,15453,79226,27972,86001,19434,12773,34241,39001,39046,81925,81003,85877,64414,42314,16654,14526,95763,88605,28383,91094,32071,75039,97218,81720,27932,91579,22950,34416,8488,57343,89599,18496,14089,81774,80709,85095,85413,73989,55494,53005,72773,17312,20772,35216,43956,52076,26065,1296,12895,75069,33518,68585,815,4115,86317,60671,81406,20962,31255,56124,37796,96090,1499,67130,31808,35387,9796,89566,70692,5374,6202,22806,32288,67217,89204,35752,9553,34973,6255,19521,11357,53612,23366,1629,61511,48253,35193,41875,73334,14373,96216,12533,78969,75119,88414,98358,50634,51654,30303,57374,76420,53270,11222,22983,49589,80649,70460,21656,36783,76027,72149,21058,40248,33827,18895,31526,75193,4053,29024,9647,48198,94541,82365,43158,55996,89343,17730,69038,63186,77491,31813,55194,5236,48892,31846,87957,60599,37887,211,68057,28078,41584,32826,30067,7653,73434,49881,78876,35380,61182,89891,98735,59052,97348,6515,1836,84379,41938,11660,29559,15045,65156,15799,63233,6322,82757,33677,74603,14686,4075,99791,12976,9948,87251,29466,42211,20166,69741,71557,88176,94868,59674,96689,37496,53949,43046,12368,35551,28887,35935,5302,94355,19974,23463,54837,55152,92315,24189,42817,48646,76646,28660,56489,87221,9276,58189,5465,91667,67756,22558,96937,34993,94139,56125,52062,4209,81891,42462,90885,10310,77632,48646,56990,10086,60753,31472,13419,27107,10713,13649,69513,66143,87174,99516,41348,8872,10907,58157,12739,64389,39545,99927,10553,77664,99884,40768,9231,22441,86581,24879,60975,59381,64242,73030,43178,27691,74022,2921,57172,26031,67097,73903,81075]
25

class Solution {
public:
    int minBuildTime(vector<int>& blocks, int split) {
    	
    }
};